/*SELECT ENAME,JOB,DEPTNO FROM SCOTT.EMPT WHERE JOB='CLERK';

SELECT * FROM SCOTT.DEPTNO;

SELECT * FROM HR.EMPLOYEES;

SELECT DEPTNO, ENAME, SAl FROM SCOTT.EMP WHERE -- WHERE È A CONDIÇÂO

SELECT EMPNO, ENAME, JOB, SAL FROM SCOTT.EMP WHERE EMPNO=7788;

SELECT ENAME, JOB, SAL FROM SCOTT.EMP WHERE JOB !='MANAGER';*/ -- DIFERENTE PODE SER != ou <>

--SELECT * FROM SCOTT.EMP WHERE SAL NOT BETWEEN 1000 AND 2000;

--SELECT ENAME, JOB, SAL FROM SCOTT.EMP WHERE JOB IN ('PRESIDENT', 'ANALYST'); -- OR

--SELECT * FROM SCOTT.EMP WHERE SAL NOT IN (2850,5000); -- OR NEGATIVO

--SELECT * FROM SCOTT.EMP WHERE ENAME LIKE '%S%'; -- x% = x é primeira/ %x = x ultima / %x% = x qualquer

--SELECT * FROM SCOTT.EMP WHERE ENAME LIKE '_L%' -- O número de underscores representa a posição da string a ser busca, ex: _L busca L no segundo caracter

--SELECT ENAME, COMM FROM SCOTT.EMP WHERE COMM IS NULL -- Para encontrar valores nulos é necessário utilizar "IS" em vez de comparar

--SELECT ENAME, COMM, MGR FROM SCOTT.EMP WHERE MGR IS NOT NULL;

-- OPERADORES MATEMÁTICOS

--SELECT ENAME , JOB, COMM, SAL, SAL+COMM FROM SCOTT.EMP WHERE SAL+COMM IS NOT NULL; -- Operação matematica entre variáveis

--SELECT ENAME, JOB, SAL, 12*SAL+200 FROM EMP;

--SELECT ENAME, JOB, SAL, 12*(SAL+200) FROM EMP;

--OPERADORES LÓGICOS

-- OPERADOR AND

/*SELECT EMPNO, ENAME, JOB, SAL FROM SCOTT.EMP WHERE SAL >=1100 AND JOB = 'CLERK';*/

/*SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, SALARY FROM HR.EMPLOYEES WHERE SALARY >= 10000 AND JOB_ID LIKE '%MAN%';*/

-- OPERADOR OR

/*SELECT EMPNO, ENAME, JOB, SAL FROM SCOTT.EMP WHERE SAL >= 1100 OR JOB = 'CLERK';*/

-- OPERADOR NOT

/*SELECT ENAME, JOB FROM SCOTT.EMP WHERE JOB NOT IN ('CLERK', 'MANAGER', 'ANALYST');*/

-- EXEMPLOS DE PRECEDÊNCIA

/*SELECT LAST_NAME, JOB_ID, SALARY FROM HR.EMPLOYEES WHERE JOB_ID ='AS_REP' OR JOB_ID = 'AD_PRES' AND SALARY > 15000;*/

/*Primeiro o operador AND depois o operador OR, ou seja,
primeiro vai localizar os salários maior que 15.000 e
depois job_id igual a ‘AD_PRES’*/

